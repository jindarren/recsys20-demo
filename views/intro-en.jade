doctype html
html
    head
        title Study Introduction
        meta(http-equiv='Content-Type', content='text/html; charset=utf-8')
        link(href='../fontawesome/css/fontawesome.css', rel='stylesheet')
        link(href='../fontawesome/css/brands.css', rel='stylesheet')
        link(href='../fontawesome/css/solid.css', rel='stylesheet')

        style.
            body {
                padding: 20px;
                font-family: Lato;
                font-weight: lighter;
            }

            .btn-primary {
                margin-left: 10px;
                margin-right: 10px;
            }

            p {
                text-align: left;
            }

            .features {
                width: 90%;
                margin-bottom: 20px;
            }

            .container-fluid {
                display: none;
            }

            .card {
                margin: 20px;
            }

            .fa-check-circle {
                color: green;
            }

            .fa-exclamation-circle {
                color: red;
            }
    body
        #part1.container
            h4(style="text-align:center") Welcome to Evaluate Our Music Bot
            p Dear participants,
            p Thank you very much for taking part in this experiment, which aims at studying how users communicate with a music chatbot for exploring diverse songs.

            h5 Tasks:
            p Please use the provided chatbot to find&nbsp
                b 5 pieces of songs&nbsp
                | that suit your preferences. The initial recommendations may not fit your taste, you need to tune recommendations by chatting with the bot. All music information used in this experiment was from Spotify.

            h5 Duration:
            p Approximately 20 minutes (including time for filling out two questionnaires).

            h5 Task steps:
            p Four steps:
            p Step 1: You will fill out your personal background (including a personality test);
            p Step 2: You can get familiar with the music bot by trying two ways of tuning recommendations before starting the study;
                ul
                    li Try&nbsp
                        b textual input&nbsp
                        | to tell bot what kind of music you are looking for (Some examples of tuning recommendations are shown on the right side panel).
                    li#sc_des Try to consider bot’s suggestions for searching for music, which aims to help you find good music.
            p Step 3: After clicking on the button “Start study”, you will be asked to try to find&nbsp
                b 5 good songs&nbsp
                | that fit your taste using the music bot, and rate the liked songs. You can give feedback on recommended music by clicking “(like, next)” when you like or skip the current song.

            p Step 4: You will give us your overall preference over the used music chatbot. (Lastly, you can also try bonus questionnaire to get 40% more pay!)

            h5 Video tutorial:
            p Please carefully watch the following tutorial before the task.
            div#player

            h5 Tips:
            ul
                li
                    b You should use Chrome browser (version > 73.0) on your PC.
                li You can send your message to the bot by pressing the "Enter" key.
                li In Mac OS system or old Windows system, you may need manually pause the current played song before playing a new song.
                //- li Do not change User ID prefilled in the questionnaire.

            p All of your data will be kept confidentially and be only used for our research analysis.
            p We greatly appreciate your efforts and time in advance.

            hr
            p#success(style="display:none")
                i.fas.fa-check-circle
                |  Great! You are a regular Spotify user. Please click the below button to start user study :)
            .row.justify-content-center
                button#next1.btn.disabled Start study

        link(href='../bootstrap/dist/css/bootstrap.min.css', rel='stylesheet')
        link(href='../jquery-ui/themes/base/jquery-ui.min.css', rel='stylesheet')
        script(src = "../jquery/dist/jquery.min.js", charset = 'utf-8')
        //script(type = "text/javascript", src = "../jquery.cookie/jquery.cookie.js", charset = 'utf-8')
        script(src = "js/popper.min.js", charset = 'utf-8')
        script(src = "../bootstrap/dist/js/bootstrap.min.js")
        script.
            var spotifyToken = "#{token}"
            var refreshToken = "#{refreshToken}"
            var userid = "#{userID}"
            window.localStorage.setItem("spotifyToken", spotifyToken)
            window.localStorage.setItem("refreshToken", refreshToken)
            window.localStorage.setItem("userid", userid)

            //if the user has sufficient artists and tracks
            var randomSetting = Math.floor(Math.random() * 3)
            var videoUrl
            //if it is baseline setting
            if (randomSetting == 0) {
                //UC video url
                videoUrl = "xrMTv7uaDFI"
                window.localStorage.setItem("setting", "/index?base")
                $("#sc_des").hide()
            } else if (randomSetting == 1) {
                //SC video url
                videoUrl = "JIuYoyyrknE"
                window.localStorage.setItem("setting", "/index?preference_oriented")
            } else if (randomSetting == 2) {
                //SC video url
                videoUrl = "JIuYoyyrknE"
                window.localStorage.setItem("setting", "/index?diversity_oriented")
            }
            var tag = document.createElement('script');
            tag.src = "https://www.youtube.com/iframe_api";
            var firstScriptTag = document.getElementsByTagName('script')[0];
            firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

            var player;

            function onYouTubeIframeAPIReady() {
                player = new YT.Player('player', {
                    height: '270',
                    width: '480',
                    videoId: videoUrl,
                });
            }

            //check if the user participated the study before
            var test_id_list = ["zogxvf222xk1geyxpl21b3a1f", "zcm6se5ml2rhoi6oun8qmj1od"]

            $.get("/findRecord?id="+userid,function (data) {

                if(data.length==0 ||  test_id_list.indexOf(userid)>=0){

                    //check if the user is qualified in terms of his/er profile

                    $.get("/getArtist?token=" + spotifyToken, function (data) {
                        return data
                    }).then(function (d) {
                        $.get("/getTrack?token=" + spotifyToken, function (data2) {
                            $.get("/getAvaGenres", function (avaGenreData) {
                                var avaGenres = avaGenreData
                                // check genres
                                var genres_exist = false;
                                for (var i = 0; i<d.items.length; i++){
    
                                    for (var j = 0; j<d.items[i].genres.length; j++){ 
                                        if (d.items[i].genres[j] in avaGenres)
                                        {
                                            genres_exist = true;
                                        }
                                        if(genres_exist)
                                        {
                                            break;
                                        }
                                    }
                                }

                                if (genres_exist && d.items.length >= 5 && data2.items.length >= 20) {
                                    $("#success").show()
                                    $("#next1").removeClass("disabled")
                                    $("#next1").addClass("btn-primary")
                                    $(".btn-primary").on("click", function () {
                                        // var start_timestamp = new Date()
                                        // window.localStorage.setItem("start_timestamp",start_timestamp.toString())

                                        var log = {
                                            id: userid,
                                            platform: window.localStorage.getItem("platform"),
                                            setting: window.localStorage.getItem("setting"),
                                            startTimestamp: new Date()
                                            // logger: {},
                                            // pool: [],
                                            // que1: [],
                                            // que2: [],
                                            // que3: [],
                                            // topRecommendedSong: {},
                                            // user: {},
                                            // completionCode: "",
                                            // que1Timestamp: null,
                                            // taskStartTimestamp:null,
                                            // taskEndTimestamp:null,
                                            // endTimestamp: null,
                                            // codeTimestamp: null,
                                            // bonusTimestamp: null,
                                        }

                                        $.ajax({
                                            url: '/addRecord',
                                            type: 'POST',
                                            contentType: 'application/json',
                                            data: JSON.stringify(log),
                                            dataType: 'json',
                                            success: function (data) {
                                                console.log(data)
                                                window.location.href = '/que1';
                                            },
                                            error: function (err) {
                                                console.log(err)
                                            }
                                        });

                                    })
                                } 
                                else {
                                    window.location.href = "/failure2"
                                }
                            })
                        })
                    })

                }else if(data.length>=1){
                    window.location.href = "/failure"
                }
            })


